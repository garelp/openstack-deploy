[ml2]
type_drivers = flat,vlan,vxlan
tenant_network_types = vxlan
mechanism_drivers = openvswitch, l2population
extension_drivers = port_security

[ml2_type_vxlan]
vni_ranges = 1:1000

[securitygroup]
enable_ipset = True
enable_security_group = True
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver

{% if inventory_hostname in groups['os_network_nodes'] %}
[ml2_type_flat]
flat_networks = External

[ml2_type_vlan]
network_vlan_ranges = Intnet1:100:200

[ovs]
bridge_mappings = External:br-ex,Intnet1:br-eth2
tunnel_bridge = br-tun
local_ip = {{ ansible_default_ipv4.address }}

[agent]
tunnel_types = vxlan
l2_population = True
prevent_arp_spoofing = True

{% elif inventory_hostname in groups['os_compute_nodes'] %}

[ovs]
#bridge_mappings = vlan101:br-vlan
tunnel_bridge = br-tun
local_ip = {{ ansible_default_ipv4.address }}

[agent]
tunnel_types = vxlan
l2_population = True

{% endif %}
