---
- hosts: os_controllers
  vars:
    verbose: true

  tasks:
    - name: create neutron database
      mysql_db: name=neutron state=present login_user=root login_password="{{ mariadb_root_pass }}"

    - name: grant privileges to neutron user in neutrondb
      mysql_user: host="{{ item }}"
                  name=neutron
                  password="{{ NEUTRON_DBPASS }}"
                  priv=neutron.*:ALL
                  state=present
                  login_user=root
                  login_password="{{ mariadb_root_pass }}"
      with_items:
        - localhost
        - "%"

    - name: "find the neutron user"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v3
               --os-identity-api-version 3
               user show neutron
      register: found
      ignore_errors: True

    - name: "create the neutron user"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v3
               --os-identity-api-version 3
               user create
               --domain default
               --password {{ NEUTRON_PASS }}
               neutron
      when: found | failed

    - name: "add the admin role to neutron user in the service project"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v3
               --os-identity-api-version 3
               role add
               --project service
               --user neutron
               admin
      when: found | failed

    - name: "find the network service entity"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v3
               --os-identity-api-version 3
               service show network
      register: found
      ignore_errors: True

    - name: "create the compute service entity"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v3
               --os-identity-api-version 3
               service create
               --name neutron
               --description "OpenStack Networking"
               network
      when: found | failed

    - name: "find the network endpoint"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v2.0
               endpoint show network
      register: found
      ignore_errors: True

    - name: "create the compute service API endpoints"
      command: openstack
               --os-token {{ admin_token }}
               --os-url http://{{ keystone_host }}:{{ keystone_admin_port }}/v3
               --os-identity-api-version 3
               endpoint create
               --region RegionOne
               network {{ item.endpoint }} http://controller:{{ item.port }}
      with_items:
        - { endpoint: public, port: 9696 }
        - { endpoint: internal, port: 9696 }
        - { endpoint: admin, port: 9696 }
      when: found | failed

    - name: "Install neutron with OVS"
      apt: name="{{ item }}" update_cache=yes state=latest
      with_items:
        - neutron-server
        - neutron-plugin-ml2
        - python-neutronclient

    - name: "write conf files"
      template: src=./templates/{{ item.src }}
                dest=/etc/neutron/{{ item.dst }}
                owner=root
                group=neutron
                mode=0644
      with_items:
        - {src: neutron.conf.j2, dst: neutron.conf}
        - {src: ml2_conf.ini.j2, dst: plugins/ml2/ml2_conf.ini}

    - name: "populate database"
      shell: su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf
             --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

    - name: "restart neutron services"
      service: name={{ item }} state=restarted
      with_items:
        - nova-api
        - neutron-server

    - name: "remove SQLite database"
      file: path=/var/lib/neutron/neutron.sqlite state=absent

- hosts: os_network_nodes
  vars:
    verbose: true

  tasks:
    - name: "disable reverse path filtering"
      lineinfile: dest=/etc/sysctl.conf create=yes
                  regexp="net.ipv4.conf.{{ item }}.rp_filter"
                  line="net.ipv4.conf.{{ item }}.rp_filter=0"
                  state=present
      with_items:
        - default
        - all

    - name: "apply: disable reverse path filtering"
      command: sysctl -p

    - name: "Install neutron with OVS"
      apt: name="{{ item }}" update_cache=yes state=latest
      with_items:
        - neutron-plugin-ml2
        - neutron-plugin-openvswitch-agent
        - neutron-l3-agent
        - neutron-dhcp-agent
        - neutron-metadata-agent
        - conntrack

    - name: "write conf files"
      template: src=./templates/{{ item.src }}
                dest=/etc/neutron/{{ item.dst }}
                owner=root
                group=neutron
                mode=0644
      with_items:
        - {src: neutron.conf.j2, dst: neutron.conf}
        - {src: metadata_agent.ini.j2, dst: metadata_agent.ini}
        - {src: dhcp_agent.ini.j2, dst: dhcp_agent.ini}
        - {src: l3_agent.ini.j2, dst: l3_agent.ini}
        - {src: ml2_conf.ini.j2, dst: plugins/ml2/ml2_conf.ini}

    - name: "create dnsmasq-neutron.conf"
      copy: src=./neutron/dnsmasq-neutron.conf
            dest=/etc/neutron/dnsmasq-neutron.conf
            owner=root
            group=neutron
            mode=0644

    - name: "Checking if external bridge exists"
      shell: "ovs-vsctl br-exists br-ex"
      register: found_br
      ignore_errors: true

    - name: "Creating external bridge"
      shell: "ovs-vsctl add-br br-ex"
      when: found_br.rc != 0

    - name: "restart neutron services"
      service: name={{ item }} state=restarted
      with_items:
        - openvswitch-switch
        - neutron-plugin-openvswitch-agent
        - neutron-l3-agent
        - neutron-dhcp-agent
        - neutron-metadata-agent

- hosts: os_compute_nodes
  vars:
    verbose: true

  tasks:
    - name: "disable reverse path filtering"
      lineinfile: dest=/etc/sysctl.conf create=yes
                  regexp="net.ipv4.conf.{{ item }}.rp_filter"
                  line="net.ipv4.conf.{{ item }}.rp_filter=0"
                  state=present
      with_items:
        - default
        - all

    - name: "apply: disable reverse path filtering"
      command: sysctl -p

    - name: "Install neutron with OVS"
      apt: name="{{ item }}" update_cache=yes state=latest
      with_items:
        - neutron-plugin-ml2
        - neutron-plugin-openvswitch-agent
        - conntrack

    - name: "write conf files"
      template: src=./templates/{{ item.src }}
                dest=/etc/neutron/{{ item.dst }}
                owner=root
                group=neutron
                mode=0644
      with_items:
        - {src: neutron.conf.j2, dst: neutron.conf}
        - {src: ml2_conf.ini.j2, dst: plugins/ml2/ml2_conf.ini}

    - name: "Checking if interco bridge exists"
      shell: "ovs-vsctl br-exists br-eth2"
      register: found_br
      ignore_errors: true

    - name: "Creating interco bridge"
      shell: "ovs-vsctl add-br br-eth2"
      when: found_br.rc != 0

    - name: "restart neutron services"
      service: name={{ item }} state=restarted
      with_items:
        - openvswitch-switch
        - nova-compute
        - neutron-plugin-openvswitch-agent
